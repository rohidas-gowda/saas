{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Head from 'next/head';\nimport NProgress from 'nprogress';\nimport * as React from 'react';\nimport Layout from '../components/layout';\nimport { getUserBySlugApiMethod, updateProfileApiMethod } from '../lib/api/public';\nimport { getSignedRequestForUploadApiMethod, uploadFileUsingSignedPutRequestApiMethod } from '../lib/api/team-member';\nimport { resizeImage } from '../lib/resizeImage';\nimport notify from '../lib/notify';\n\nclass YourSettings extends React.Component {\n  static async getInitialProps() {\n    const slug = 'team-builder-book';\n    const user = await getUserBySlugApiMethod(slug);\n    return _objectSpread({}, user);\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const {\n        newName,\n        newAvatarUrl\n      } = this.state;\n\n      if (!newName) {\n        notify('Name is required');\n        return;\n      }\n\n      NProgress.start();\n      this.setState({\n        disabled: true\n      });\n\n      try {\n        await updateProfileApiMethod({\n          name: newName,\n          avatarUrl: newAvatarUrl\n        });\n        notify('You successfully updated your profile.');\n      } catch (error) {\n        notify(error);\n      } finally {\n        this.setState({\n          disabled: false\n        });\n        NProgress.done();\n      }\n    });\n\n    _defineProperty(this, \"uploadFile\", async () => {\n      const fileElement = document.getElementById('upload-file-user-avatar');\n      const file = fileElement.files[0];\n\n      if (file == null) {\n        notify('No file selected for upload.');\n        return;\n      }\n\n      const fileName = file.name;\n      const fileType = file.type;\n      NProgress.start();\n      console.log('reset');\n      this.setState({\n        disabled: true\n      });\n      const bucket = process.env.BUCKET_FOR_AVATARS;\n      const prefix = 'team-builder-book';\n\n      try {\n        const responseFromApiServerForUpload = await getSignedRequestForUploadApiMethod({\n          fileName,\n          fileType,\n          prefix,\n          bucket\n        });\n        const resizedFile = await resizeImage(file, 128, 128);\n        await uploadFileUsingSignedPutRequestApiMethod(file, responseFromApiServerForUpload.signedRequest, {\n          'Cache-Control': 'max-age=2592000'\n        });\n        this.setState({\n          newAvatarUrl: responseFromApiServerForUpload.url\n        });\n        await updateProfileApiMethod({\n          name: this.state.newName,\n          avatarUrl: this.state.newAvatarUrl\n        });\n        notify('You successfully uploaded new avatar.');\n      } catch (error) {\n        notify(error);\n      } finally {\n        console.log('final end data');\n        console.log(this.state.newAvatarUrl);\n        fileElement.value = '';\n        this.setState({\n          disabled: false\n        });\n        NProgress.done();\n      }\n    });\n\n    this.state = {\n      newName: this.props.user.displayName,\n      newAvatarUrl: this.props.user.avatarUrl,\n      disabled: false\n    };\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    const {\n      newName,\n      newAvatarUrl\n    } = this.state;\n    console.log('Data of state');\n    console.log(newAvatarUrl);\n    return __jsx(Layout, this.props, __jsx(Head, null, __jsx(\"title\", null, \"Your Settings at Async\"), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"description\"\n    })), __jsx(\"div\", {\n      style: {\n        padding: this.props.isMobile ? '0px' : '0px 30px',\n        fontSize: '15px',\n        height: '100%'\n      }\n    }, __jsx(\"h3\", null, \"Your Settings\"), __jsx(\"h4\", {\n      style: {\n        marginTop: '40px'\n      }\n    }, \"Your account\"), __jsx(\"ul\", null, __jsx(\"li\", null, \"Your email: \", __jsx(\"b\", null, user.email)), __jsx(\"li\", null, \"Your username: \", __jsx(\"b\", null, user.displayName))), __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      autoComplete: \"off\"\n    }, __jsx(\"h4\", null, \"Your username\"), __jsx(TextField, {\n      autoComplete: \"off\",\n      value: newName,\n      helperText: \"Your username as seen by your team members\",\n      onChange: event => {\n        this.setState({\n          newName: event.target.value\n        });\n      }\n    }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      disabled: this.state.disabled\n    }, \"Update username\")), __jsx(\"br\", null), __jsx(\"h4\", null, \"Your photo\"), __jsx(Avatar, {\n      src: newAvatarUrl,\n      style: {\n        display: 'inline-flex',\n        verticalAlign: 'middle',\n        marginRight: 20,\n        width: 60,\n        height: 60\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"upload-file-user-avatar\"\n    }, __jsx(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      component: \"span\",\n      disabled: this.state.disabled\n    }, \"Update avatar\")), __jsx(\"input\", {\n      accept: \"image/*\",\n      name: \"upload-file-user-avatar\",\n      id: \"upload-file-user-avatar\",\n      type: \"file\",\n      style: {\n        display: 'none'\n      },\n      onChange: this.uploadFile\n    }), __jsx(\"p\", null), __jsx(\"br\", null)));\n  }\n\n}\n\nexport default YourSettings;","map":{"version":3,"names":["Avatar","Button","TextField","Head","NProgress","React","Layout","getUserBySlugApiMethod","updateProfileApiMethod","getSignedRequestForUploadApiMethod","uploadFileUsingSignedPutRequestApiMethod","resizeImage","notify","YourSettings","Component","getInitialProps","slug","user","constructor","props","event","preventDefault","newName","newAvatarUrl","state","start","setState","disabled","name","avatarUrl","error","done","fileElement","document","getElementById","file","files","fileName","fileType","type","console","log","bucket","process","env","BUCKET_FOR_AVATARS","prefix","responseFromApiServerForUpload","resizedFile","signedRequest","url","value","displayName","render","padding","isMobile","fontSize","height","marginTop","email","onSubmit","target","display","verticalAlign","marginRight","width","uploadFile"],"sources":["E:/saas/book/1-begin/app/pages/your-settings.tsx"],"sourcesContent":["import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Head from 'next/head';\r\nimport NProgress from 'nprogress';\r\nimport * as React from 'react';\r\n\r\nimport Layout from '../components/layout';\r\n\r\nimport { getUserBySlugApiMethod, updateProfileApiMethod } from '../lib/api/public';\r\nimport {\r\n  getSignedRequestForUploadApiMethod,\r\n  uploadFileUsingSignedPutRequestApiMethod,\r\n} from '../lib/api/team-member';\r\nimport { resizeImage } from '../lib/resizeImage';\r\n\r\nimport notify from '../lib/notify';\r\n\r\ntype Props = {\r\n  isMobile: boolean;\r\n  user: { email: string; displayName: string; slug: string; avatarUrl: string };\r\n};\r\n\r\ntype State = { newName: string; newAvatarUrl: string; disabled: boolean };\r\n\r\nclass YourSettings extends React.Component<Props, State> {\r\n  public static async getInitialProps() {\r\n    const slug = 'team-builder-book';\r\n\r\n    const user = await getUserBySlugApiMethod(slug);\r\n    return { ...user };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      newName: this.props.user.displayName,\r\n      newAvatarUrl: this.props.user.avatarUrl,\r\n      disabled: false,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { user } = this.props;\r\n    const { newName, newAvatarUrl } = this.state;\r\n\r\n    console.log('Data of state');\r\n    console.log(newAvatarUrl);\r\n\r\n    return (\r\n      <Layout {...this.props}>\r\n        <Head>\r\n          <title>Your Settings at Async</title>\r\n          <meta name=\"description\" content=\"description\" />\r\n        </Head>\r\n        <div\r\n          style={{\r\n            padding: this.props.isMobile ? '0px' : '0px 30px',\r\n            fontSize: '15px',\r\n            height: '100%',\r\n          }}\r\n        >\r\n          <h3>Your Settings</h3>\r\n          <h4 style={{ marginTop: '40px' }}>Your account</h4>\r\n          <ul>\r\n            <li>\r\n              Your email: <b>{user.email}</b>\r\n            </li>\r\n            <li>\r\n              Your username: <b>{user.displayName}</b>\r\n            </li>\r\n          </ul>\r\n          <form onSubmit={this.onSubmit} autoComplete=\"off\">\r\n            <h4>Your username</h4>\r\n            <TextField\r\n              autoComplete=\"off\"\r\n              value={newName}\r\n              helperText=\"Your username as seen by your team members\"\r\n              onChange={(event) => {\r\n                this.setState({ newName: event.target.value });\r\n              }}\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={this.state.disabled}\r\n            >\r\n              Update username\r\n            </Button>\r\n          </form>\r\n\r\n          <br />\r\n          <h4>Your photo</h4>\r\n          <Avatar\r\n            src={newAvatarUrl}\r\n            style={{\r\n              display: 'inline-flex',\r\n              verticalAlign: 'middle',\r\n              marginRight: 20,\r\n              width: 60,\r\n              height: 60,\r\n            }}\r\n          />\r\n          <label htmlFor=\"upload-file-user-avatar\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              component=\"span\"\r\n              disabled={this.state.disabled}\r\n            >\r\n              Update avatar\r\n            </Button>\r\n          </label>\r\n          <input\r\n            accept=\"image/*\"\r\n            name=\"upload-file-user-avatar\"\r\n            id=\"upload-file-user-avatar\"\r\n            type=\"file\"\r\n            style={{ display: 'none' }}\r\n            onChange={this.uploadFile}\r\n          />\r\n          <p />\r\n          <br />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n\r\n  private onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    const { newName, newAvatarUrl } = this.state;\r\n\r\n    if (!newName) {\r\n      notify('Name is required');\r\n      return;\r\n    }\r\n\r\n    NProgress.start();\r\n    this.setState({ disabled: true });\r\n\r\n    try {\r\n      await updateProfileApiMethod({\r\n        name: newName,\r\n        avatarUrl: newAvatarUrl,\r\n      });\r\n\r\n      notify('You successfully updated your profile.');\r\n    } catch (error) {\r\n      notify(error);\r\n    } finally {\r\n      this.setState({ disabled: false });\r\n      NProgress.done();\r\n    }\r\n  };\r\n\r\n  private uploadFile = async () => {\r\n    const fileElement = document.getElementById('upload-file-user-avatar') as HTMLFormElement;\r\n    const file = fileElement.files[0];\r\n\r\n    if (file == null) {\r\n      notify('No file selected for upload.');\r\n      return;\r\n    }\r\n\r\n    const fileName = file.name;\r\n    const fileType = file.type;\r\n\r\n    NProgress.start();\r\n    console.log('reset');\r\n    this.setState({ disabled: true });\r\n\r\n    const bucket = process.env.BUCKET_FOR_AVATARS;\r\n\r\n    const prefix = 'team-builder-book';\r\n\r\n    try {\r\n      const responseFromApiServerForUpload = await getSignedRequestForUploadApiMethod({\r\n        fileName,\r\n        fileType,\r\n        prefix,\r\n        bucket,\r\n      });\r\n\r\n      const resizedFile = await resizeImage(file, 128, 128);\r\n\r\n      await uploadFileUsingSignedPutRequestApiMethod(\r\n        file,\r\n        responseFromApiServerForUpload.signedRequest,\r\n        {\r\n          'Cache-Control': 'max-age=2592000',\r\n        },\r\n      );\r\n\r\n      this.setState({\r\n        newAvatarUrl: responseFromApiServerForUpload.url,\r\n      });\r\n\r\n      await updateProfileApiMethod({\r\n        name: this.state.newName,\r\n        avatarUrl: this.state.newAvatarUrl,\r\n      });\r\n\r\n      notify('You successfully uploaded new avatar.');\r\n    } catch (error) {\r\n      notify(error);\r\n    } finally {\r\n      console.log('final end data');\r\n      console.log(this.state.newAvatarUrl);\r\n      fileElement.value = '';\r\n      this.setState({ disabled: false });\r\n      NProgress.done();\r\n    }\r\n  };\r\n}\r\n\r\nexport default YourSettings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}