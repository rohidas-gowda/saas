{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport React from 'react';\nexport var openConfirmDialogExternal;\n\nvar Confirmer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Confirmer, _React$Component);\n\n  var _super = _createSuper(Confirmer);\n\n  function Confirmer(props) {\n    var _this;\n\n    _classCallCheck(this, Confirmer);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.state.onAnswer(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleYes\", function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.state.onAnswer(true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"openConfirmDialog\", function (_ref) {\n      var title = _ref.title,\n          message = _ref.message,\n          onAnswer = _ref.onAnswer;\n\n      _this.setState({\n        open: true,\n        title: title,\n        message: message,\n        onAnswer: onAnswer\n      });\n    });\n\n    _this.state = {\n      open: false,\n      title: 'Are you sure?',\n      message: '',\n      onAnswer: null\n    };\n    openConfirmDialogExternal = _this.openConfirmDialog;\n    return _this;\n  }\n\n  _createClass(Confirmer, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\"\n      }, __jsx(DialogTitle, {\n        id: \"alert-dialog-title\"\n      }, this.state.title), __jsx(DialogContent, null, __jsx(DialogContentText, {\n        id: \"alert-dialog-description\"\n      }, this.state.message)), __jsx(DialogActions, {\n        style: {\n          padding: '10px'\n        }\n      }, __jsx(Button, {\n        onClick: this.handleClose,\n        variant: \"contained\",\n        color: \"primary\",\n        autoFocus: true\n      }, \"Cancel\"), __jsx(Button, {\n        onClick: this.handleYes,\n        variant: \"contained\",\n        color: \"secondary\"\n      }, \"OK\")));\n    }\n  }]);\n\n  return Confirmer;\n}(React.Component);\n\nexport default Confirmer;","map":{"version":3,"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","React","openConfirmDialogExternal","Confirmer","props","setState","open","state","onAnswer","title","message","openConfirmDialog","handleClose","padding","handleYes","Component"],"sources":["E:/saas/book/1-begin/app/components/common/Confirmer.tsx"],"sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport React from 'react';\r\n\r\nexport let openConfirmDialogExternal;\r\n\r\ntype State = {\r\n  open: boolean;\r\n  title: string;\r\n  message: string;\r\n  onAnswer: (answer) => void;\r\n};\r\n\r\nclass Confirmer extends React.Component<any, State> {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n      title: 'Are you sure?',\r\n      message: '',\r\n      onAnswer: null,\r\n    };\r\n\r\n    openConfirmDialogExternal = this.openConfirmDialog;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <Dialog\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">{this.state.message}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={{ padding: '10px' }}>\r\n          <Button onClick={this.handleClose} variant=\"contained\" color=\"primary\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleYes} variant=\"contained\" color=\"secondary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  public handleClose = () => {\r\n    this.setState({ open: false });\r\n    this.state.onAnswer(false);\r\n  };\r\n\r\n  public handleYes = () => {\r\n    this.setState({ open: false });\r\n    this.state.onAnswer(true);\r\n  };\r\n\r\n  public openConfirmDialog = ({ title, message, onAnswer }) => {\r\n    this.setState({ open: true, title, message, onAnswer });\r\n  };\r\n}\r\n\r\nexport default Confirmer;\r\n"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAIC,yBAAJ;;IASDC,S;;;;;EACJ,mBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;;IADiB,8DAqCE,YAAM;MACzB,MAAKC,QAAL,CAAc;QAAEC,IAAI,EAAE;MAAR,CAAd;;MACA,MAAKC,KAAL,CAAWC,QAAX,CAAoB,KAApB;IACD,CAxCkB;;IAAA,4DA0CA,YAAM;MACvB,MAAKH,QAAL,CAAc;QAAEC,IAAI,EAAE;MAAR,CAAd;;MACA,MAAKC,KAAL,CAAWC,QAAX,CAAoB,IAApB;IACD,CA7CkB;;IAAA,oEA+CQ,gBAAkC;MAAA,IAA/BC,KAA+B,QAA/BA,KAA+B;MAAA,IAAxBC,OAAwB,QAAxBA,OAAwB;MAAA,IAAfF,QAAe,QAAfA,QAAe;;MAC3D,MAAKH,QAAL,CAAc;QAAEC,IAAI,EAAE,IAAR;QAAcG,KAAK,EAALA,KAAd;QAAqBC,OAAO,EAAPA,OAArB;QAA8BF,QAAQ,EAARA;MAA9B,CAAd;IACD,CAjDkB;;IAGjB,MAAKD,KAAL,GAAa;MACXD,IAAI,EAAE,KADK;MAEXG,KAAK,EAAE,eAFI;MAGXC,OAAO,EAAE,EAHE;MAIXF,QAAQ,EAAE;IAJC,CAAb;IAOAN,yBAAyB,GAAG,MAAKS,iBAAjC;IAViB;EAWlB;;;;WAED,kBAAgB;MACd,OACE,MAAC,MAAD;QACE,IAAI,EAAE,KAAKJ,KAAL,CAAWD,IADnB;QAEE,OAAO,EAAE,KAAKM,WAFhB;QAGE,mBAAgB,oBAHlB;QAIE,oBAAiB;MAJnB,GAME,MAAC,WAAD;QAAa,EAAE,EAAC;MAAhB,GAAsC,KAAKL,KAAL,CAAWE,KAAjD,CANF,EAOE,MAAC,aAAD,QACE,MAAC,iBAAD;QAAmB,EAAE,EAAC;MAAtB,GAAkD,KAAKF,KAAL,CAAWG,OAA7D,CADF,CAPF,EAUE,MAAC,aAAD;QAAe,KAAK,EAAE;UAAEG,OAAO,EAAE;QAAX;MAAtB,GACE,MAAC,MAAD;QAAQ,OAAO,EAAE,KAAKD,WAAtB;QAAmC,OAAO,EAAC,WAA3C;QAAuD,KAAK,EAAC,SAA7D;QAAuE,SAAS;MAAhF,YADF,EAIE,MAAC,MAAD;QAAQ,OAAO,EAAE,KAAKE,SAAtB;QAAiC,OAAO,EAAC,WAAzC;QAAqD,KAAK,EAAC;MAA3D,QAJF,CAVF,CADF;IAqBD;;;;EApCqBb,KAAK,CAACc,S;;AAqD9B,eAAeZ,SAAf"},"metadata":{},"sourceType":"module"}