{"ast":null,"code":"import 'isomorphic-unfetch';\nexport default async function sendRequestAndGetResponse(path, opts = {}) {\n  const headers = Object.assign({}, opts.headers || {}, opts.externalServer ? {} : {\n    'Content-type': 'application/json; charset=UTF-8'\n  });\n  const {\n    request\n  } = opts;\n\n  if (request && request.headers && request.headers.cookie) {\n    headers.cookie = request.headers.cookie;\n  }\n\n  const qs = opts.qs || '';\n  const response = await fetch(opts.externalServer ? `${path}${qs}` : `${process.env.URL_API}${path}${qs}`, Object.assign({\n    method: 'POST',\n    credentials: 'include'\n  }, opts, {\n    headers\n  })); //console.log(response.status);\n  // console.log(response.statusText);\n\n  const text = await response.text();\n\n  if (response.status >= 400) {\n    console.error(text);\n    throw new Error(response.status.toString());\n  }\n\n  try {\n    const data = JSON.parse(text);\n    return data;\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      return text;\n    }\n\n    throw err;\n  }\n}","map":{"version":3,"names":["sendRequestAndGetResponse","path","opts","headers","Object","assign","externalServer","request","cookie","qs","response","fetch","process","env","URL_API","method","credentials","text","status","console","error","Error","toString","data","JSON","parse","err","SyntaxError"],"sources":["E:/saas/book/1-begin/app/lib/api/sendRequestAndGetResponse.ts"],"sourcesContent":["import 'isomorphic-unfetch';\r\n\r\nexport default async function sendRequestAndGetResponse(path, opts: any = {}) {\r\n  const headers = Object.assign(\r\n    {},\r\n    opts.headers || {},\r\n    opts.externalServer\r\n      ? {}\r\n      : {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n  );\r\n\r\n  const { request } = opts;\r\n  if (request && request.headers && request.headers.cookie) {\r\n    headers.cookie = request.headers.cookie;\r\n  }\r\n\r\n  const qs = opts.qs || '';\r\n\r\n  const response = await fetch(\r\n    opts.externalServer ? `${path}${qs}` : `${process.env.URL_API}${path}${qs}`,\r\n    Object.assign({ method: 'POST', credentials: 'include' }, opts, { headers }),\r\n  );\r\n\r\n  //console.log(response.status);\r\n  // console.log(response.statusText);\r\n\r\n  const text = await response.text();\r\n\r\n  if (response.status >= 400) {\r\n    console.error(text);\r\n    throw new Error(response.status.toString());\r\n  }\r\n\r\n  try {\r\n    const data = JSON.parse(text);\r\n\r\n    return data;\r\n  } catch (err) {\r\n    if (err instanceof SyntaxError) {\r\n      return text;\r\n    }\r\n\r\n    throw err;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,oBAAP;AAEA,eAAe,eAAeA,yBAAf,CAAyCC,IAAzC,EAA+CC,IAAS,GAAG,EAA3D,EAA+D;EAC5E,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CACd,EADc,EAEdH,IAAI,CAACC,OAAL,IAAgB,EAFF,EAGdD,IAAI,CAACI,cAAL,GACI,EADJ,GAEI;IACE,gBAAgB;EADlB,CALU,CAAhB;EAUA,MAAM;IAAEC;EAAF,IAAcL,IAApB;;EACA,IAAIK,OAAO,IAAIA,OAAO,CAACJ,OAAnB,IAA8BI,OAAO,CAACJ,OAAR,CAAgBK,MAAlD,EAA0D;IACxDL,OAAO,CAACK,MAAR,GAAiBD,OAAO,CAACJ,OAAR,CAAgBK,MAAjC;EACD;;EAED,MAAMC,EAAE,GAAGP,IAAI,CAACO,EAAL,IAAW,EAAtB;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BT,IAAI,CAACI,cAAL,GAAuB,GAAEL,IAAK,GAAEQ,EAAG,EAAnC,GAAwC,GAAEG,OAAO,CAACC,GAAR,CAAYC,OAAQ,GAAEb,IAAK,GAAEQ,EAAG,EADhD,EAE1BL,MAAM,CAACC,MAAP,CAAc;IAAEU,MAAM,EAAE,MAAV;IAAkBC,WAAW,EAAE;EAA/B,CAAd,EAA0Dd,IAA1D,EAAgE;IAAEC;EAAF,CAAhE,CAF0B,CAA5B,CAlB4E,CAuB5E;EACA;;EAEA,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;EAEA,IAAIP,QAAQ,CAACQ,MAAT,IAAmB,GAAvB,EAA4B;IAC1BC,OAAO,CAACC,KAAR,CAAcH,IAAd;IACA,MAAM,IAAII,KAAJ,CAAUX,QAAQ,CAACQ,MAAT,CAAgBI,QAAhB,EAAV,CAAN;EACD;;EAED,IAAI;IACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAb;IAEA,OAAOM,IAAP;EACD,CAJD,CAIE,OAAOG,GAAP,EAAY;IACZ,IAAIA,GAAG,YAAYC,WAAnB,EAAgC;MAC9B,OAAOV,IAAP;IACD;;IAED,MAAMS,GAAN;EACD;AACF"},"metadata":{},"sourceType":"module"}